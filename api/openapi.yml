openapi: 3.0.1
info:
  title: Alcarin API
  description: Alcarin api
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /test/test:
    summary: Test endpoint
    get:
      tags:
        - test
      responses:
        '200':
          description: All is fine
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /healthz:
    summary: Endpoint that check system health status
    get:
      tags:
        - system
      responses:
        '200':
          description: All is fine
  /users:
    post:
      summary: ''
      operationId: create-user
      responses:
        '204':
          description: Account created or account already exists. The response for both cases are indistinguishable by desing to prevent email probing by potential attackers
      description: Create new user with provided email and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationData'
        description: ''
  /session:
    post:
      summary: ''
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  accessToken:
                    type: string
                    description: JWT to authorize following requests
                  tokenType:
                    type: string
                  expiresAt:
                    type: number
                    description: Unix timestamp (in seconds) when the token will expire
                required:
                  - accessToken
                  - tokenType
                  - expiresAt
      description: Log in to the system and create new session token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationData'
  /users/current/characters:
    post:
      summary: Create character
      operationId: create-character
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterModel'
              examples: {}
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema: {}
      description: Endpoint for creation character for user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreationPayload'
        description: ''
      parameters: []
      security:
        - Authorization: []
    get:
      summary: List of characters for user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharacterModel'
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
      operationId: get-user-characters
      description: Get list of user's characters
      security:
        - Authorization: []
  '/users/current/characters/{characterId}':
    get:
      summary: One user character
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      operationId: 'get-users-current-characters-:characterId'
      description: Getting data model for character
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
        name: characterId
        in: path
        description: Character ID
        required: true
components:
  schemas:
    AuthorizationData:
      type: object
      title: AuthorizationData
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - email
        - password
    CharacterModel:
      type: object
      title: CharacterModel
      additionalProperties: false
      description: Model of race data
      properties:
        name:
          type: string
        id:
          type: string
        race:
          type: string
    RaceModel:
      type: object
      title: RaceModel
      additionalProperties: false
      properties:
        name:
          type: string
        key:
          type: string
      description: Model of race data
    CharacterCreationPayload:
      title: CharacterCreationPayload
      type: object
      properties:
        name:
          type: string
        race:
          type: string
      required:
        - name
        - race
      description: Paylod for character creation
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: Token for current user
